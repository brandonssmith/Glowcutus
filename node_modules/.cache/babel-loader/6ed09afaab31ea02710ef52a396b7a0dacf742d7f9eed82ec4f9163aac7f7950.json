{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Glowcutus\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fonts = ['font-sans',\n// System default\n'font-serif',\n// Times New Roman\n'font-mono',\n// Monospace\n'font-[\"Playfair_Display\"]',\n// Elegant serif\n'font-[\"Dancing_Script\"]',\n// Handwriting\n'font-[\"Poppins\"]',\n// Modern sans-serif\n'font-[\"Montserrat\"]',\n// Clean sans-serif\n'font-[\"Roboto\"]',\n// Google's default\n'font-[\"Lora\"]',\n// Serif with personality\n'font-[\"Raleway\"]',\n// Modern geometric\n'font-[\"Merriweather\"]',\n// Readable serif\n'font-[\"Open_Sans\"]' // Friendly sans-serif\n];\nconst artPrompts = [{\n  text: \"Sketch a creature that glows in the dark\",\n  type: 'art'\n}, {\n  text: \"Draw a landscape where the sky and ground have swapped colors\",\n  type: 'art'\n}, {\n  text: \"Design a character who can paint with their mind\",\n  type: 'art'\n}, {\n  text: \"Create an abstract piece using only three colors\",\n  type: 'art'\n}, {\n  text: \"Illustrate a scene from your favorite book\",\n  type: 'art'\n}, {\n  text: \"Draw a self-portrait in a style you've never tried before\",\n  type: 'art'\n}, {\n  text: \"Design a logo for a space exploration company\",\n  type: 'art'\n}, {\n  text: \"Create a pattern inspired by nature\",\n  type: 'art'\n}, {\n  text: \"Sketch a futuristic cityscape\",\n  type: 'art'\n}, {\n  text: \"Draw a character that represents your current mood\",\n  type: 'art'\n}, {\n  text: \"Create a mandala using geometric shapes\",\n  type: 'art'\n}, {\n  text: \"Design a book cover for your favorite story\",\n  type: 'art'\n}, {\n  text: \"Draw a scene from your dreams\",\n  type: 'art'\n}, {\n  text: \"Create a character that combines two animals\",\n  type: 'art'\n}, {\n  text: \"Illustrate a moment of pure joy\",\n  type: 'art'\n}, {\n  text: \"Design a poster for an imaginary movie\",\n  type: 'art'\n}, {\n  text: \"Create a piece using only circles\",\n  type: 'art'\n}, {\n  text: \"Draw a portrait using only straight lines\",\n  type: 'art'\n}, {\n  text: \"Design a new type of vehicle\",\n  type: 'art'\n}, {\n  text: \"Create a pattern that tells a story\",\n  type: 'art'\n}, {\n  text: \"Illustrate your favorite childhood memory\",\n  type: 'art'\n}, {\n  text: \"Design a character that represents a season\",\n  type: 'art'\n}, {\n  text: \"Create a piece inspired by your favorite song\",\n  type: 'art'\n}, {\n  text: \"Draw a scene from an alternate universe\",\n  type: 'art'\n}, {\n  text: \"Design a new type of plant\",\n  type: 'art'\n}, {\n  text: \"Create a piece using only primary colors\",\n  type: 'art'\n}, {\n  text: \"Illustrate a moment of transformation\",\n  type: 'art'\n}, {\n  text: \"Design a character that represents an emotion\",\n  type: 'art'\n}, {\n  text: \"Create a piece inspired by a historical event\",\n  type: 'art'\n}, {\n  text: \"Draw a scene from your favorite myth\",\n  type: 'art'\n}];\nconst musicPrompts = [{\n  text: \"Compose a melody inspired by the sound of rain on a tin roof\",\n  type: 'music'\n}, {\n  text: \"Create a song that tells the story of a lost constellation\",\n  type: 'music'\n}, {\n  text: \"Compose a piece that combines classical and electronic elements\",\n  type: 'music'\n}, {\n  text: \"Write a song about a journey you've never taken\",\n  type: 'music'\n}, {\n  text: \"Create a melody using only five notes\",\n  type: 'music'\n}, {\n  text: \"Compose a piece inspired by your favorite season\",\n  type: 'music'\n}, {\n  text: \"Write a song from the perspective of an inanimate object\",\n  type: 'music'\n}, {\n  text: \"Create a rhythm using everyday household sounds\",\n  type: 'music'\n}, {\n  text: \"Compose a piece that tells a story without words\",\n  type: 'music'\n}, {\n  text: \"Write a song that captures the feeling of a first day\",\n  type: 'music'\n}, {\n  text: \"Create a melody inspired by ocean waves\",\n  type: 'music'\n}, {\n  text: \"Write a song about a secret place\",\n  type: 'music'\n}, {\n  text: \"Compose a piece using only percussion\",\n  type: 'music'\n}, {\n  text: \"Create a song that tells the story of a dream\",\n  type: 'music'\n}, {\n  text: \"Write a melody inspired by a city at night\",\n  type: 'music'\n}, {\n  text: \"Compose a piece that combines two different cultures\",\n  type: 'music'\n}, {\n  text: \"Create a song about a moment of change\",\n  type: 'music'\n}, {\n  text: \"Write a melody inspired by a natural phenomenon\",\n  type: 'music'\n}, {\n  text: \"Compose a piece that tells a story in reverse\",\n  type: 'music'\n}, {\n  text: \"Create a song about a forgotten memory\",\n  type: 'music'\n}, {\n  text: \"Write a melody inspired by a historical event\",\n  type: 'music'\n}, {\n  text: \"Compose a piece that combines three different genres\",\n  type: 'music'\n}, {\n  text: \"Create a song about a place you've never been\",\n  type: 'music'\n}, {\n  text: \"Write a melody inspired by a childhood memory\",\n  type: 'music'\n}, {\n  text: \"Compose a piece that tells a story without a beginning\",\n  type: 'music'\n}, {\n  text: \"Create a song about a moment of realization\",\n  type: 'music'\n}, {\n  text: \"Write a melody inspired by a favorite book\",\n  type: 'music'\n}, {\n  text: \"Compose a piece that combines nature and technology\",\n  type: 'music'\n}, {\n  text: \"Create a song about a chance encounter\",\n  type: 'music'\n}, {\n  text: \"Write a melody inspired by a work of art\",\n  type: 'music'\n}];\n\n// Keep some default encouraging prompts as fallback\nconst defaultEncouragingPrompts = [{\n  text: \"Your creativity knows no bounds. Every idea you have is a step toward something amazing.\",\n  type: 'encouragement'\n}, {\n  text: \"The best art comes from the heart. Trust your instincts and let your imagination flow.\",\n  type: 'encouragement'\n}, {\n  text: \"Every masterpiece starts with a single stroke. You're capable of creating something beautiful.\",\n  type: 'encouragement'\n}, {\n  text: \"Your unique perspective is your superpower. Share it with the world.\",\n  type: 'encouragement'\n}, {\n  text: \"Creativity is a journey, not a destination. Enjoy every step of the process.\",\n  type: 'encouragement'\n}, {\n  text: \"The world needs your voice, your vision, your art. Keep creating.\",\n  type: 'encouragement'\n}, {\n  text: \"Every challenge is an opportunity to grow. You're stronger than you know.\",\n  type: 'encouragement'\n}, {\n  text: \"Your potential is limitless. Believe in yourself and your abilities.\",\n  type: 'encouragement'\n}, {\n  text: \"The only limit to your creativity is your imagination. Dream big.\",\n  type: 'encouragement'\n}, {\n  text: \"Your art has the power to inspire others. Keep sharing your gifts.\",\n  type: 'encouragement'\n}, {\n  text: \"Every creation is a reflection of your unique journey. Embrace it.\",\n  type: 'encouragement'\n}, {\n  text: \"The creative process is as beautiful as the final result. Trust the journey.\",\n  type: 'encouragement'\n}, {\n  text: \"Your ideas matter. Your voice matters. Your art matters.\",\n  type: 'encouragement'\n}, {\n  text: \"Creativity is your birthright. Use it to make the world more beautiful.\",\n  type: 'encouragement'\n}, {\n  text: \"The best is yet to come. Keep pushing your boundaries.\",\n  type: 'encouragement'\n}, {\n  text: \"Your creative spirit is a gift to the world. Share it generously.\",\n  type: 'encouragement'\n}, {\n  text: \"Every stroke of your brush, every note you play, every word you write matters.\",\n  type: 'encouragement'\n}, {\n  text: \"The world is waiting for your unique perspective. Don't hold back.\",\n  type: 'encouragement'\n}, {\n  text: \"Your creativity is like a muscle - the more you use it, the stronger it gets.\",\n  type: 'encouragement'\n}, {\n  text: \"Every creative journey begins with a single step. You've already started.\",\n  type: 'encouragement'\n}, {\n  text: \"Your imagination is your greatest tool. Use it to create wonders.\",\n  type: 'encouragement'\n}, {\n  text: \"The creative process is a dance between chaos and order. Trust the rhythm.\",\n  type: 'encouragement'\n}, {\n  text: \"Your art has the power to change lives. Never underestimate its impact.\",\n  type: 'encouragement'\n}, {\n  text: \"Creativity is not a destination but a way of life. Embrace it fully.\",\n  type: 'encouragement'\n}, {\n  text: \"Your unique voice is needed in this world. Let it be heard.\",\n  type: 'encouragement'\n}, {\n  text: \"Every creative block is an opportunity to grow. Push through it.\",\n  type: 'encouragement'\n}, {\n  text: \"Your artistic journey is uniquely yours. Own it with pride.\",\n  type: 'encouragement'\n}, {\n  text: \"The creative spirit within you is infinite. Trust its guidance.\",\n  type: 'encouragement'\n}, {\n  text: \"Your art is a reflection of your soul. Let it shine brightly.\",\n  type: 'encouragement'\n}, {\n  text: \"Creativity is your superpower. Use it to make magic.\",\n  type: 'encouragement'\n}];\nfunction App() {\n  _s();\n  const [currentPrompt, setCurrentPrompt] = useState(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isClicking, setIsClicking] = useState(false);\n  const [isEncouraging, setIsEncouraging] = useState(false);\n  const [encouragingQuotes, setEncouragingQuotes] = useState([]);\n\n  // Check if we need to fetch new quotes\n  const shouldFetchNewQuotes = () => {\n    const lastFetchDate = localStorage.getItem('lastQuoteFetch');\n    if (!lastFetchDate) return true;\n    const lastFetch = new Date(lastFetchDate);\n    const today = new Date();\n    return lastFetch.getDate() !== today.getDate() || lastFetch.getMonth() !== today.getMonth() || lastFetch.getFullYear() !== today.getFullYear();\n  };\n\n  // Fetch encouraging quotes when component mounts and daily\n  useEffect(() => {\n    const fetchQuotesIfNeeded = async () => {\n      if (shouldFetchNewQuotes()) {\n        await fetchEncouragingQuotes();\n        localStorage.setItem('lastQuoteFetch', new Date().toISOString());\n      } else {\n        // Load existing quotes from localStorage\n        const savedQuotes = localStorage.getItem('savedQuotes');\n        if (savedQuotes) {\n          setEncouragingQuotes(JSON.parse(savedQuotes));\n        } else {\n          await fetchEncouragingQuotes();\n        }\n      }\n    };\n    fetchQuotesIfNeeded();\n  }, []);\n  const fetchEncouragingQuotes = async () => {\n    try {\n      // Fetch 5 new quotes from each category\n      const quotes = await Promise.all([fetch('https://api.quotable.io/quotes/random?tags=inspirational&limit=5'), fetch('https://api.quotable.io/quotes/random?tags=motivational&limit=5'), fetch('https://api.quotable.io/quotes/random?tags=success&limit=5'), fetch('https://api.quotable.io/quotes/random?tags=leadership&limit=5'), fetch('https://api.quotable.io/quotes/random?tags=wisdom&limit=5')]);\n      const allQuotes = await Promise.all(quotes.map(res => res.json()));\n      const formattedQuotes = allQuotes.flat().map(quote => ({\n        text: quote.content,\n        type: 'encouragement',\n        author: quote.author\n      }));\n\n      // Combine with existing quotes from localStorage if any\n      const existingQuotes = localStorage.getItem('savedQuotes');\n      const combinedQuotes = existingQuotes ? [...formattedQuotes, ...JSON.parse(existingQuotes)] : [...formattedQuotes, ...defaultEncouragingPrompts];\n\n      // Save to localStorage\n      localStorage.setItem('savedQuotes', JSON.stringify(combinedQuotes));\n      setEncouragingQuotes(combinedQuotes);\n    } catch (error) {\n      console.error('Error fetching encouraging quotes:', error);\n      const existingQuotes = localStorage.getItem('savedQuotes');\n      if (existingQuotes) {\n        setEncouragingQuotes(JSON.parse(existingQuotes));\n      } else {\n        setEncouragingQuotes(defaultEncouragingPrompts);\n      }\n    }\n  };\n  const fetchWritingPrompt = async () => {\n    try {\n      const response = await fetch('https://api.quotable.io/random');\n      const data = await response.json();\n      return {\n        text: `Write a story inspired by this quote: \"${data.content}\"`,\n        type: 'writing',\n        author: data.author\n      };\n    } catch (error) {\n      console.error('Error fetching quote:', error);\n      return {\n        text: \"Write a story about a library that contains books from the future\",\n        type: 'writing'\n      };\n    }\n  };\n  const handleSmallButtonClick = () => {\n    setIsEncouraging(!isEncouraging);\n    // Clear the current prompt when switching modes\n    setCurrentPrompt(null);\n  };\n  const handleClick = async () => {\n    setIsClicking(true);\n    await getRandomPrompt();\n    setTimeout(() => setIsClicking(false), 300);\n  };\n  const getRandomFont = () => {\n    return fonts[Math.floor(Math.random() * fonts.length)];\n  };\n  const getRandomPrompt = async () => {\n    setIsAnimating(true);\n    setIsLoading(true);\n    try {\n      let newPrompt;\n      if (isEncouraging) {\n        if (encouragingQuotes.length > 0) {\n          // Get a random quote that's different from the current one\n          let randomIndex;\n          do {\n            randomIndex = Math.floor(Math.random() * encouragingQuotes.length);\n          } while (currentPrompt && encouragingQuotes[randomIndex].text === currentPrompt.text);\n          newPrompt = {\n            ...encouragingQuotes[randomIndex],\n            font: getRandomFont()\n          };\n        } else {\n          // Get a random default prompt that's different from the current one\n          let randomIndex;\n          do {\n            randomIndex = Math.floor(Math.random() * defaultEncouragingPrompts.length);\n          } while (currentPrompt && defaultEncouragingPrompts[randomIndex].text === currentPrompt.text);\n          newPrompt = {\n            ...defaultEncouragingPrompts[randomIndex],\n            font: getRandomFont()\n          };\n        }\n      } else {\n        const promptType = Math.random();\n        if (promptType < 0.4) {\n          const writingPrompt = await fetchWritingPrompt();\n          newPrompt = {\n            ...writingPrompt,\n            font: getRandomFont()\n          };\n        } else if (promptType < 0.7) {\n          // Get a random art prompt that's different from the current one\n          let randomIndex;\n          do {\n            randomIndex = Math.floor(Math.random() * artPrompts.length);\n          } while (currentPrompt && artPrompts[randomIndex].text === currentPrompt.text);\n          newPrompt = {\n            ...artPrompts[randomIndex],\n            font: getRandomFont()\n          };\n        } else {\n          // Get a random music prompt that's different from the current one\n          let randomIndex;\n          do {\n            randomIndex = Math.floor(Math.random() * musicPrompts.length);\n          } while (currentPrompt && musicPrompts[randomIndex].text === currentPrompt.text);\n          newPrompt = {\n            ...musicPrompts[randomIndex],\n            font: getRandomFont()\n          };\n        }\n      }\n      setTimeout(() => {\n        setCurrentPrompt(newPrompt);\n        setIsAnimating(false);\n        setIsLoading(false);\n      }, 1000);\n    } catch (error) {\n      console.error('Error getting prompt:', error);\n      setIsAnimating(false);\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-purple-900 via-indigo-800 to-blue-900 flex flex-col items-center justify-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-white mb-8 text-center\",\n      children: \"Inspiration Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        disabled: isLoading,\n        className: `relative w-48 h-48 rounded-full bg-indigo-600 border-4 border-white/30\n            transform transition-all duration-300 hover:scale-105\n            ${isAnimating ? 'animate-pulse-slow' : ''}\n            ${isClicking ? 'animate-click' : ''}\n            shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 rounded-full bg-white opacity-10 animate-pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"absolute inset-0 flex items-center justify-center text-white text-xl font-bold\",\n          children: isLoading ? 'Loading...' : 'Click Me!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSmallButtonClick,\n          className: `relative w-20 h-20 rounded-full bg-indigo-600 border-2 border-white/30\n              transform transition-all duration-300 hover:scale-105\n              ${isClicking ? 'animate-click' : ''}\n              shadow-lg hover:shadow-xl`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute inset-0 rounded-full bg-white opacity-10 animate-pulse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"absolute inset-0 flex items-center justify-center text-white text-sm font-bold\",\n            children: isEncouraging ? 'Encourage' : 'Create'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-sm font-medium w-24 text-center\",\n          children: isEncouraging ? 'Click me for inspiration' : 'Click me for encouragement'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), currentPrompt && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 p-6 bg-white/10 backdrop-blur-lg rounded-lg max-w-md w-full\",\n      onContextMenu: e => {\n        e.preventDefault();\n        const menu = document.createElement('div');\n        menu.className = 'fixed bg-white rounded-lg shadow-lg p-2 z-50';\n        menu.style.left = `${e.clientX}px`;\n        menu.style.top = `${e.clientY}px`;\n        const saveButton = document.createElement('button');\n        saveButton.className = 'block w-full text-left px-4 py-2 text-gray-800 hover:bg-gray-100 rounded';\n        saveButton.textContent = 'Save as Image';\n        saveButton.onclick = async () => {\n          const promptElement = e.currentTarget;\n          try {\n            // Dynamically import html2canvas\n            const html2canvas = (await import('html2canvas')).default;\n            const canvas = await html2canvas(promptElement, {\n              backgroundColor: 'transparent',\n              logging: false,\n              useCORS: true\n            });\n\n            // Convert to blob and download\n            canvas.toBlob(blob => {\n              if (blob) {\n                const url = URL.createObjectURL(blob);\n                const a = document.createElement('a');\n                a.href = url;\n                a.download = `inspiration-${new Date().toISOString().slice(0, 10)}.png`;\n                document.body.appendChild(a);\n                a.click();\n                document.body.removeChild(a);\n                URL.revokeObjectURL(url);\n              }\n            }, 'image/png');\n          } catch (error) {\n            console.error('Error saving image:', error);\n          }\n          document.body.removeChild(menu);\n        };\n        menu.appendChild(saveButton);\n        document.body.appendChild(menu);\n\n        // Close menu when clicking outside\n        const closeMenu = e => {\n          if (!menu.contains(e.target)) {\n            document.body.removeChild(menu);\n            document.removeEventListener('click', closeMenu);\n          }\n        };\n        document.addEventListener('click', closeMenu);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `inline-block px-3 py-1 rounded-full text-sm font-semibold mb-2\n              ${currentPrompt.type === 'writing' ? 'bg-blue-500' : currentPrompt.type === 'art' ? 'bg-green-500' : currentPrompt.type === 'music' ? 'bg-purple-500' : 'bg-pink-500'}`,\n          children: currentPrompt.type.charAt(0).toUpperCase() + currentPrompt.type.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `text-xl mt-2 ${currentPrompt.font}`,\n          children: currentPrompt.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this), currentPrompt.author && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm mt-2 text-gray-300\",\n          children: [\"Quote by: \", currentPrompt.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DTgbzbs2Si+ZQdFyuOf/QLETMiY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","fonts","artPrompts","text","type","musicPrompts","defaultEncouragingPrompts","App","_s","currentPrompt","setCurrentPrompt","isAnimating","setIsAnimating","isLoading","setIsLoading","isClicking","setIsClicking","isEncouraging","setIsEncouraging","encouragingQuotes","setEncouragingQuotes","shouldFetchNewQuotes","lastFetchDate","localStorage","getItem","lastFetch","Date","today","getDate","getMonth","getFullYear","fetchQuotesIfNeeded","fetchEncouragingQuotes","setItem","toISOString","savedQuotes","JSON","parse","quotes","Promise","all","fetch","allQuotes","map","res","json","formattedQuotes","flat","quote","content","author","existingQuotes","combinedQuotes","stringify","error","console","fetchWritingPrompt","response","data","handleSmallButtonClick","handleClick","getRandomPrompt","setTimeout","getRandomFont","Math","floor","random","length","newPrompt","randomIndex","font","promptType","writingPrompt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onContextMenu","e","preventDefault","menu","document","createElement","style","left","clientX","top","clientY","saveButton","textContent","onclick","promptElement","currentTarget","html2canvas","default","canvas","backgroundColor","logging","useCORS","toBlob","blob","url","URL","createObjectURL","a","href","download","slice","body","appendChild","click","removeChild","revokeObjectURL","closeMenu","contains","target","removeEventListener","addEventListener","charAt","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Code/Glowcutus/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\ninterface Prompt {\n  text: string;\n  type: 'writing' | 'art' | 'music' | 'encouragement';\n  author?: string;\n  font?: string;\n}\n\nconst fonts = [\n  'font-sans', // System default\n  'font-serif', // Times New Roman\n  'font-mono', // Monospace\n  'font-[\"Playfair_Display\"]', // Elegant serif\n  'font-[\"Dancing_Script\"]', // Handwriting\n  'font-[\"Poppins\"]', // Modern sans-serif\n  'font-[\"Montserrat\"]', // Clean sans-serif\n  'font-[\"Roboto\"]', // Google's default\n  'font-[\"Lora\"]', // Serif with personality\n  'font-[\"Raleway\"]', // Modern geometric\n  'font-[\"Merriweather\"]', // Readable serif\n  'font-[\"Open_Sans\"]', // Friendly sans-serif\n];\n\nconst artPrompts: Prompt[] = [\n  { text: \"Sketch a creature that glows in the dark\", type: 'art' },\n  { text: \"Draw a landscape where the sky and ground have swapped colors\", type: 'art' },\n  { text: \"Design a character who can paint with their mind\", type: 'art' },\n  { text: \"Create an abstract piece using only three colors\", type: 'art' },\n  { text: \"Illustrate a scene from your favorite book\", type: 'art' },\n  { text: \"Draw a self-portrait in a style you've never tried before\", type: 'art' },\n  { text: \"Design a logo for a space exploration company\", type: 'art' },\n  { text: \"Create a pattern inspired by nature\", type: 'art' },\n  { text: \"Sketch a futuristic cityscape\", type: 'art' },\n  { text: \"Draw a character that represents your current mood\", type: 'art' },\n  { text: \"Create a mandala using geometric shapes\", type: 'art' },\n  { text: \"Design a book cover for your favorite story\", type: 'art' },\n  { text: \"Draw a scene from your dreams\", type: 'art' },\n  { text: \"Create a character that combines two animals\", type: 'art' },\n  { text: \"Illustrate a moment of pure joy\", type: 'art' },\n  { text: \"Design a poster for an imaginary movie\", type: 'art' },\n  { text: \"Create a piece using only circles\", type: 'art' },\n  { text: \"Draw a portrait using only straight lines\", type: 'art' },\n  { text: \"Design a new type of vehicle\", type: 'art' },\n  { text: \"Create a pattern that tells a story\", type: 'art' },\n  { text: \"Illustrate your favorite childhood memory\", type: 'art' },\n  { text: \"Design a character that represents a season\", type: 'art' },\n  { text: \"Create a piece inspired by your favorite song\", type: 'art' },\n  { text: \"Draw a scene from an alternate universe\", type: 'art' },\n  { text: \"Design a new type of plant\", type: 'art' },\n  { text: \"Create a piece using only primary colors\", type: 'art' },\n  { text: \"Illustrate a moment of transformation\", type: 'art' },\n  { text: \"Design a character that represents an emotion\", type: 'art' },\n  { text: \"Create a piece inspired by a historical event\", type: 'art' },\n  { text: \"Draw a scene from your favorite myth\", type: 'art' },\n];\n\nconst musicPrompts: Prompt[] = [\n  { text: \"Compose a melody inspired by the sound of rain on a tin roof\", type: 'music' },\n  { text: \"Create a song that tells the story of a lost constellation\", type: 'music' },\n  { text: \"Compose a piece that combines classical and electronic elements\", type: 'music' },\n  { text: \"Write a song about a journey you've never taken\", type: 'music' },\n  { text: \"Create a melody using only five notes\", type: 'music' },\n  { text: \"Compose a piece inspired by your favorite season\", type: 'music' },\n  { text: \"Write a song from the perspective of an inanimate object\", type: 'music' },\n  { text: \"Create a rhythm using everyday household sounds\", type: 'music' },\n  { text: \"Compose a piece that tells a story without words\", type: 'music' },\n  { text: \"Write a song that captures the feeling of a first day\", type: 'music' },\n  { text: \"Create a melody inspired by ocean waves\", type: 'music' },\n  { text: \"Write a song about a secret place\", type: 'music' },\n  { text: \"Compose a piece using only percussion\", type: 'music' },\n  { text: \"Create a song that tells the story of a dream\", type: 'music' },\n  { text: \"Write a melody inspired by a city at night\", type: 'music' },\n  { text: \"Compose a piece that combines two different cultures\", type: 'music' },\n  { text: \"Create a song about a moment of change\", type: 'music' },\n  { text: \"Write a melody inspired by a natural phenomenon\", type: 'music' },\n  { text: \"Compose a piece that tells a story in reverse\", type: 'music' },\n  { text: \"Create a song about a forgotten memory\", type: 'music' },\n  { text: \"Write a melody inspired by a historical event\", type: 'music' },\n  { text: \"Compose a piece that combines three different genres\", type: 'music' },\n  { text: \"Create a song about a place you've never been\", type: 'music' },\n  { text: \"Write a melody inspired by a childhood memory\", type: 'music' },\n  { text: \"Compose a piece that tells a story without a beginning\", type: 'music' },\n  { text: \"Create a song about a moment of realization\", type: 'music' },\n  { text: \"Write a melody inspired by a favorite book\", type: 'music' },\n  { text: \"Compose a piece that combines nature and technology\", type: 'music' },\n  { text: \"Create a song about a chance encounter\", type: 'music' },\n  { text: \"Write a melody inspired by a work of art\", type: 'music' },\n];\n\n// Keep some default encouraging prompts as fallback\nconst defaultEncouragingPrompts: Prompt[] = [\n  { text: \"Your creativity knows no bounds. Every idea you have is a step toward something amazing.\", type: 'encouragement' },\n  { text: \"The best art comes from the heart. Trust your instincts and let your imagination flow.\", type: 'encouragement' },\n  { text: \"Every masterpiece starts with a single stroke. You're capable of creating something beautiful.\", type: 'encouragement' },\n  { text: \"Your unique perspective is your superpower. Share it with the world.\", type: 'encouragement' },\n  { text: \"Creativity is a journey, not a destination. Enjoy every step of the process.\", type: 'encouragement' },\n  { text: \"The world needs your voice, your vision, your art. Keep creating.\", type: 'encouragement' },\n  { text: \"Every challenge is an opportunity to grow. You're stronger than you know.\", type: 'encouragement' },\n  { text: \"Your potential is limitless. Believe in yourself and your abilities.\", type: 'encouragement' },\n  { text: \"The only limit to your creativity is your imagination. Dream big.\", type: 'encouragement' },\n  { text: \"Your art has the power to inspire others. Keep sharing your gifts.\", type: 'encouragement' },\n  { text: \"Every creation is a reflection of your unique journey. Embrace it.\", type: 'encouragement' },\n  { text: \"The creative process is as beautiful as the final result. Trust the journey.\", type: 'encouragement' },\n  { text: \"Your ideas matter. Your voice matters. Your art matters.\", type: 'encouragement' },\n  { text: \"Creativity is your birthright. Use it to make the world more beautiful.\", type: 'encouragement' },\n  { text: \"The best is yet to come. Keep pushing your boundaries.\", type: 'encouragement' },\n  { text: \"Your creative spirit is a gift to the world. Share it generously.\", type: 'encouragement' },\n  { text: \"Every stroke of your brush, every note you play, every word you write matters.\", type: 'encouragement' },\n  { text: \"The world is waiting for your unique perspective. Don't hold back.\", type: 'encouragement' },\n  { text: \"Your creativity is like a muscle - the more you use it, the stronger it gets.\", type: 'encouragement' },\n  { text: \"Every creative journey begins with a single step. You've already started.\", type: 'encouragement' },\n  { text: \"Your imagination is your greatest tool. Use it to create wonders.\", type: 'encouragement' },\n  { text: \"The creative process is a dance between chaos and order. Trust the rhythm.\", type: 'encouragement' },\n  { text: \"Your art has the power to change lives. Never underestimate its impact.\", type: 'encouragement' },\n  { text: \"Creativity is not a destination but a way of life. Embrace it fully.\", type: 'encouragement' },\n  { text: \"Your unique voice is needed in this world. Let it be heard.\", type: 'encouragement' },\n  { text: \"Every creative block is an opportunity to grow. Push through it.\", type: 'encouragement' },\n  { text: \"Your artistic journey is uniquely yours. Own it with pride.\", type: 'encouragement' },\n  { text: \"The creative spirit within you is infinite. Trust its guidance.\", type: 'encouragement' },\n  { text: \"Your art is a reflection of your soul. Let it shine brightly.\", type: 'encouragement' },\n  { text: \"Creativity is your superpower. Use it to make magic.\", type: 'encouragement' },\n];\n\nfunction App() {\n  const [currentPrompt, setCurrentPrompt] = useState<Prompt | null>(null);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isClicking, setIsClicking] = useState(false);\n  const [isEncouraging, setIsEncouraging] = useState(false);\n  const [encouragingQuotes, setEncouragingQuotes] = useState<Prompt[]>([]);\n\n  // Check if we need to fetch new quotes\n  const shouldFetchNewQuotes = () => {\n    const lastFetchDate = localStorage.getItem('lastQuoteFetch');\n    if (!lastFetchDate) return true;\n    \n    const lastFetch = new Date(lastFetchDate);\n    const today = new Date();\n    return lastFetch.getDate() !== today.getDate() || \n           lastFetch.getMonth() !== today.getMonth() || \n           lastFetch.getFullYear() !== today.getFullYear();\n  };\n\n  // Fetch encouraging quotes when component mounts and daily\n  useEffect(() => {\n    const fetchQuotesIfNeeded = async () => {\n      if (shouldFetchNewQuotes()) {\n        await fetchEncouragingQuotes();\n        localStorage.setItem('lastQuoteFetch', new Date().toISOString());\n      } else {\n        // Load existing quotes from localStorage\n        const savedQuotes = localStorage.getItem('savedQuotes');\n        if (savedQuotes) {\n          setEncouragingQuotes(JSON.parse(savedQuotes));\n        } else {\n          await fetchEncouragingQuotes();\n        }\n      }\n    };\n\n    fetchQuotesIfNeeded();\n  }, []);\n\n  const fetchEncouragingQuotes = async () => {\n    try {\n      // Fetch 5 new quotes from each category\n      const quotes = await Promise.all([\n        fetch('https://api.quotable.io/quotes/random?tags=inspirational&limit=5'),\n        fetch('https://api.quotable.io/quotes/random?tags=motivational&limit=5'),\n        fetch('https://api.quotable.io/quotes/random?tags=success&limit=5'),\n        fetch('https://api.quotable.io/quotes/random?tags=leadership&limit=5'),\n        fetch('https://api.quotable.io/quotes/random?tags=wisdom&limit=5')\n      ]);\n\n      const allQuotes = await Promise.all(quotes.map(res => res.json()));\n      const formattedQuotes = allQuotes.flat().map(quote => ({\n        text: quote.content,\n        type: 'encouragement' as const,\n        author: quote.author\n      }));\n\n      // Combine with existing quotes from localStorage if any\n      const existingQuotes = localStorage.getItem('savedQuotes');\n      const combinedQuotes = existingQuotes \n        ? [...formattedQuotes, ...JSON.parse(existingQuotes)]\n        : [...formattedQuotes, ...defaultEncouragingPrompts];\n\n      // Save to localStorage\n      localStorage.setItem('savedQuotes', JSON.stringify(combinedQuotes));\n      setEncouragingQuotes(combinedQuotes);\n    } catch (error) {\n      console.error('Error fetching encouraging quotes:', error);\n      const existingQuotes = localStorage.getItem('savedQuotes');\n      if (existingQuotes) {\n        setEncouragingQuotes(JSON.parse(existingQuotes));\n      } else {\n        setEncouragingQuotes(defaultEncouragingPrompts);\n      }\n    }\n  };\n\n  const fetchWritingPrompt = async () => {\n    try {\n      const response = await fetch('https://api.quotable.io/random');\n      const data = await response.json();\n      return {\n        text: `Write a story inspired by this quote: \"${data.content}\"`,\n        type: 'writing' as const,\n        author: data.author\n      };\n    } catch (error) {\n      console.error('Error fetching quote:', error);\n      return {\n        text: \"Write a story about a library that contains books from the future\",\n        type: 'writing' as const\n      };\n    }\n  };\n\n  const handleSmallButtonClick = () => {\n    setIsEncouraging(!isEncouraging);\n    // Clear the current prompt when switching modes\n    setCurrentPrompt(null);\n  };\n\n  const handleClick = async () => {\n    setIsClicking(true);\n    await getRandomPrompt();\n    setTimeout(() => setIsClicking(false), 300);\n  };\n\n  const getRandomFont = () => {\n    return fonts[Math.floor(Math.random() * fonts.length)];\n  };\n\n  const getRandomPrompt = async () => {\n    setIsAnimating(true);\n    setIsLoading(true);\n    \n    try {\n      let newPrompt: Prompt;\n\n      if (isEncouraging) {\n        if (encouragingQuotes.length > 0) {\n          // Get a random quote that's different from the current one\n          let randomIndex;\n          do {\n            randomIndex = Math.floor(Math.random() * encouragingQuotes.length);\n          } while (\n            currentPrompt && \n            encouragingQuotes[randomIndex].text === currentPrompt.text\n          );\n          \n          newPrompt = {\n            ...encouragingQuotes[randomIndex],\n            font: getRandomFont()\n          };\n        } else {\n          // Get a random default prompt that's different from the current one\n          let randomIndex;\n          do {\n            randomIndex = Math.floor(Math.random() * defaultEncouragingPrompts.length);\n          } while (\n            currentPrompt && \n            defaultEncouragingPrompts[randomIndex].text === currentPrompt.text\n          );\n          \n          newPrompt = {\n            ...defaultEncouragingPrompts[randomIndex],\n            font: getRandomFont()\n          };\n        }\n      } else {\n        const promptType = Math.random();\n        if (promptType < 0.4) {\n          const writingPrompt = await fetchWritingPrompt();\n          newPrompt = { ...writingPrompt, font: getRandomFont() };\n        } else if (promptType < 0.7) {\n          // Get a random art prompt that's different from the current one\n          let randomIndex;\n          do {\n            randomIndex = Math.floor(Math.random() * artPrompts.length);\n          } while (\n            currentPrompt && \n            artPrompts[randomIndex].text === currentPrompt.text\n          );\n          \n          newPrompt = {\n            ...artPrompts[randomIndex],\n            font: getRandomFont()\n          };\n        } else {\n          // Get a random music prompt that's different from the current one\n          let randomIndex;\n          do {\n            randomIndex = Math.floor(Math.random() * musicPrompts.length);\n          } while (\n            currentPrompt && \n            musicPrompts[randomIndex].text === currentPrompt.text\n          );\n          \n          newPrompt = {\n            ...musicPrompts[randomIndex],\n            font: getRandomFont()\n          };\n        }\n      }\n\n      setTimeout(() => {\n        setCurrentPrompt(newPrompt);\n        setIsAnimating(false);\n        setIsLoading(false);\n      }, 1000);\n    } catch (error) {\n      console.error('Error getting prompt:', error);\n      setIsAnimating(false);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-indigo-800 to-blue-900 flex flex-col items-center justify-center p-4\">\n      <h1 className=\"text-4xl font-bold text-white mb-8 text-center\">\n        Inspiration Button\n      </h1>\n      \n      <div className=\"flex items-center gap-4\">\n        <button\n          onClick={handleClick}\n          disabled={isLoading}\n          className={`relative w-48 h-48 rounded-full bg-indigo-600 border-4 border-white/30\n            transform transition-all duration-300 hover:scale-105\n            ${isAnimating ? 'animate-pulse-slow' : ''}\n            ${isClicking ? 'animate-click' : ''}\n            shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed`}\n        >\n          <div className=\"absolute inset-0 rounded-full bg-white opacity-10 animate-pulse\"></div>\n          <span className=\"absolute inset-0 flex items-center justify-center text-white text-xl font-bold\">\n            {isLoading ? 'Loading...' : 'Click Me!'}\n          </span>\n        </button>\n\n        <div className=\"flex flex-col items-center gap-2\">\n          <button\n            onClick={handleSmallButtonClick}\n            className={`relative w-20 h-20 rounded-full bg-indigo-600 border-2 border-white/30\n              transform transition-all duration-300 hover:scale-105\n              ${isClicking ? 'animate-click' : ''}\n              shadow-lg hover:shadow-xl`}\n          >\n            <div className=\"absolute inset-0 rounded-full bg-white opacity-10 animate-pulse\"></div>\n            <span className=\"absolute inset-0 flex items-center justify-center text-white text-sm font-bold\">\n              {isEncouraging ? 'Encourage' : 'Create'}\n            </span>\n          </button>\n          <span className=\"text-white text-sm font-medium w-24 text-center\">\n            {isEncouraging ? 'Click me for inspiration' : 'Click me for encouragement'}\n          </span>\n        </div>\n      </div>\n\n      {currentPrompt && (\n        <div \n          className=\"mt-8 p-6 bg-white/10 backdrop-blur-lg rounded-lg max-w-md w-full\"\n          onContextMenu={(e) => {\n            e.preventDefault();\n            const menu = document.createElement('div');\n            menu.className = 'fixed bg-white rounded-lg shadow-lg p-2 z-50';\n            menu.style.left = `${e.clientX}px`;\n            menu.style.top = `${e.clientY}px`;\n            \n            const saveButton = document.createElement('button');\n            saveButton.className = 'block w-full text-left px-4 py-2 text-gray-800 hover:bg-gray-100 rounded';\n            saveButton.textContent = 'Save as Image';\n            saveButton.onclick = async () => {\n              const promptElement = e.currentTarget;\n              \n              try {\n                // Dynamically import html2canvas\n                const html2canvas = (await import('html2canvas')).default;\n                const canvas = await html2canvas(promptElement, {\n                  backgroundColor: 'transparent',\n                  logging: false,\n                  useCORS: true,\n                });\n                \n                // Convert to blob and download\n                canvas.toBlob((blob: Blob | null) => {\n                  if (blob) {\n                    const url = URL.createObjectURL(blob);\n                    const a = document.createElement('a');\n                    a.href = url;\n                    a.download = `inspiration-${new Date().toISOString().slice(0,10)}.png`;\n                    document.body.appendChild(a);\n                    a.click();\n                    document.body.removeChild(a);\n                    URL.revokeObjectURL(url);\n                  }\n                }, 'image/png');\n              } catch (error) {\n                console.error('Error saving image:', error);\n              }\n              \n              document.body.removeChild(menu);\n            };\n            \n            menu.appendChild(saveButton);\n            document.body.appendChild(menu);\n            \n            // Close menu when clicking outside\n            const closeMenu = (e: MouseEvent) => {\n              if (!menu.contains(e.target as Node)) {\n                document.body.removeChild(menu);\n                document.removeEventListener('click', closeMenu);\n              }\n            };\n            \n            document.addEventListener('click', closeMenu);\n          }}\n        >\n          <div className=\"text-white text-center\">\n            <span className={`inline-block px-3 py-1 rounded-full text-sm font-semibold mb-2\n              ${currentPrompt.type === 'writing' ? 'bg-blue-500' : \n                currentPrompt.type === 'art' ? 'bg-green-500' : \n                currentPrompt.type === 'music' ? 'bg-purple-500' :\n                'bg-pink-500'}`}>\n              {currentPrompt.type.charAt(0).toUpperCase() + currentPrompt.type.slice(1)}\n            </span>\n            <p className={`text-xl mt-2 ${currentPrompt.font}`}>\n              {currentPrompt.text}\n            </p>\n            {currentPrompt.author && (\n              <p className=\"text-sm mt-2 text-gray-300\">Quote by: {currentPrompt.author}</p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}